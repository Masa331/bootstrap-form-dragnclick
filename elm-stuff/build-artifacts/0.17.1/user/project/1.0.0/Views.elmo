var _user$project$Views$draggedElement = function (model) {
	var _p0 = _user$project$Models$currentlyDraggedInput(model);
	if (_p0.ctor === 'Nothing') {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[]));
	} else {
		var _p4 = _p0._0;
		var dimensions = function () {
			var _p1 = A2(
				_user$project$ElementMap$dimensionsById,
				model.elementMap,
				_elm_lang$core$Basics$toString(_p4.id));
			if (_p1.ctor === 'Nothing') {
				return {ctor: '_Tuple4', _0: 0, _1: 0, _2: 0, _3: 0};
			} else {
				var _p2 = _p1._0;
				return {
					ctor: '_Tuple4',
					_0: _elm_lang$core$Basics$round(_p2.x) + (model.mousePosition.x - model.initialMousePosition.x),
					_1: _elm_lang$core$Basics$round(_p2.y) + (model.mousePosition.y - model.initialMousePosition.y),
					_2: _elm_lang$core$Basics$round(_p2.width),
					_3: _elm_lang$core$Basics$round(_p2.height)
				};
			}
		}();
		var _p3 = dimensions;
		var topx = _p3._0;
		var topy = _p3._1;
		var widthx = _p3._2;
		var heightx = _p3._3;
		var top = {
			ctor: '_Tuple2',
			_0: 'top',
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(topy),
				'px')
		};
		var left = {
			ctor: '_Tuple2',
			_0: 'left',
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(topx),
				'px')
		};
		var width = {
			ctor: '_Tuple2',
			_0: 'width',
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(widthx),
				'px')
		};
		var height = {
			ctor: '_Tuple2',
			_0: 'height',
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(heightx),
				'px')
		};
		var attrs = _elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$style(
				_elm_lang$core$Native_List.fromArray(
					[
						{ctor: '_Tuple2', _0: 'position', _1: 'fixed'},
						top,
						left,
						width,
						height
					]))
			]);
		var input = _user$project$HtmlTreeBuilder$buildDragged(_p4);
		var htmlTree = A5(
			_user$project$HtmlTree$Element,
			'form',
			_elm_lang$core$Native_List.fromArray(
				[]),
			_user$project$HtmlTree$Children(
				_elm_lang$core$Native_List.fromArray(
					[input])),
			'',
			_elm_lang$core$Native_List.fromArray(
				[]));
		var content = _user$project$Form$view(htmlTree);
		return A2(_elm_lang$html$Html$div, attrs, content);
	}
};
var _user$project$Views$inputEdit = function (input) {
	var inputs = _elm_lang$core$Native_List.fromArray(
		[
			_user$project$HtmlTreeBuilder$buildWithControlElements(input)
		]);
	var htmlTree = A5(
		_user$project$HtmlTree$Element,
		'form',
		_elm_lang$core$Native_List.fromArray(
			[]),
		_user$project$HtmlTree$Children(inputs),
		'',
		_elm_lang$core$Native_List.fromArray(
			[]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$a,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$href('javascript:void(0)'),
						_elm_lang$html$Html_Events$onClick(
						_user$project$Messages$FormMessage(_user$project$Messages$StopEditing))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Back to form')
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('row')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('col-sm-8')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('bd-example')
									]),
								_user$project$Form$view(htmlTree)),
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('highlight')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$Markup$view(htmlTree)
									]))
							])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('col-sm-4')
							]),
						_user$project$InputOptions$view(input))
					]))
			]));
};
var _user$project$Views$formEdit = function (model) {
	var inputs2 = A2(_elm_lang$core$List$map, _user$project$HtmlTreeBuilder$buildRaw, model.form);
	var rawHtmlTree = A5(
		_user$project$HtmlTree$Element,
		'form',
		_elm_lang$core$Native_List.fromArray(
			[]),
		_user$project$HtmlTree$Children(inputs2),
		'',
		_elm_lang$core$Native_List.fromArray(
			[]));
	var inputs1 = A2(_elm_lang$core$List$map, _user$project$HtmlTreeBuilder$buildWithControlElements, model.form);
	var htmlTreeWithControlElements = A5(
		_user$project$HtmlTree$Element,
		'form',
		_elm_lang$core$Native_List.fromArray(
			[]),
		_user$project$HtmlTree$Children(inputs1),
		'',
		_elm_lang$core$Native_List.fromArray(
			[]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('row')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('col-sm-8')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('bd-example')
									]),
								_user$project$Form$view(htmlTreeWithControlElements)),
								_user$project$Views$draggedElement(model),
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('highlight')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_user$project$Markup$view(rawHtmlTree)
									]))
							])),
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('col-sm-4')
							]),
						_user$project$Templates$view)
					]))
			]));
};
var _user$project$Views$view = function (model) {
	var _p5 = _user$project$Models$currentlyEdditedInput(model);
	if (_p5.ctor === 'Nothing') {
		return _user$project$Views$formEdit(model);
	} else {
		return _user$project$Views$inputEdit(_p5._0);
	}
};
