var _user$project$Inputs$createAttribute = function (attribute) {
	return A2(_elm_lang$html$Html_Attributes$attribute, attribute.name, attribute.value);
};
var _user$project$Inputs$createAttributes = function (model) {
	return A2(_elm_lang$core$List$map, _user$project$Inputs$createAttribute, model.attributes);
};
var _user$project$Inputs$editLinks = function (id) {
	var l4 = A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Move Down')
			]));
	var l3 = A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Move up')
			]));
	var castedId = _elm_lang$core$String$toInt(id);
	var resolvedId = function () {
		var _p0 = castedId;
		if (_p0.ctor === 'Ok') {
			return _p0._0;
		} else {
			return 1;
		}
	}();
	var l1 = A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);'),
				_elm_lang$html$Html_Events$onClick(
				_user$project$Messages$FormMessage(
					_user$project$Messages$EditInput(resolvedId)))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Edit')
			]));
	var l2 = A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);'),
				_elm_lang$html$Html_Events$onClick(
				_user$project$Messages$FormMessage(
					_user$project$Messages$RemoveInput(resolvedId)))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Remove')
			]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('edit-and-remove-link')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				l1,
				_elm_lang$html$Html$text(' | '),
				l2,
				_elm_lang$html$Html$text(' | '),
				l3,
				_elm_lang$html$Html$text(' | '),
				l4
			]));
};
var _user$project$Inputs$toElmHtmlNode = function (model) {
	var value = _elm_lang$html$Html$text(model.value);
	var childs = function (_p1) {
		var _p2 = _p1;
		return _p2._0;
	}(model.children);
	var attributes = _user$project$Inputs$createAttributes(model);
	var _p3 = childs;
	if (_p3.ctor === '[]') {
		return _user$project$Models$isDeletable(model) ? _elm_lang$core$Native_List.fromArray(
			[
				_user$project$Inputs$editLinks(model.value)
			]) : _elm_lang$core$Native_List.fromArray(
			[
				A3(
				_elm_lang$html$Html$node,
				model.tag,
				attributes,
				_elm_lang$core$Native_List.fromArray(
					[value]))
			]);
	} else {
		return _user$project$Models$isDeletable(model) ? _elm_lang$core$Native_List.fromArray(
			[
				A3(
				_elm_lang$html$Html$node,
				model.tag,
				attributes,
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$List$concat(
						A2(_elm_lang$core$List$map, _user$project$Inputs$toElmHtmlNode, childs)),
					_elm_lang$core$Native_List.fromArray(
						[value])))
			]) : _elm_lang$core$Native_List.fromArray(
			[
				A3(
				_elm_lang$html$Html$node,
				model.tag,
				attributes,
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$List$concat(
						A2(_elm_lang$core$List$map, _user$project$Inputs$toElmHtmlNode, childs)),
					_elm_lang$core$Native_List.fromArray(
						[value])))
			]);
	}
};
var _user$project$Inputs$placeholderToAttr = function (plac) {
	return A2(_elm_lang$core$Maybe$map, _elm_lang$html$Html_Attributes$placeholder, plac);
};
var _user$project$Inputs$classesToAttr = function (classList) {
	return _elm_lang$core$Maybe$Just(
		_elm_lang$html$Html_Attributes$class(
			A2(_elm_lang$core$String$join, ' ', classList)));
};
var _user$project$Inputs$idToAttr = function (id) {
	return _elm_lang$core$Maybe$Just(
		_elm_lang$html$Html_Attributes$id(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'input',
				_elm_lang$core$Basics$toString(id))));
};
var _user$project$Inputs$textAreaAttrs = function (attrs) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$Inputs$idToAttr(attrs.id),
			_user$project$Inputs$classesToAttr(attrs.classList),
			_user$project$Inputs$placeholderToAttr(attrs.placeholder),
			_elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$rows(attrs.rowNumber))
		]);
};
var _user$project$Inputs$selectAttrs = function (attrs) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$Inputs$idToAttr(attrs.id),
			_user$project$Inputs$classesToAttr(attrs.classList),
			_elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$type$('text'))
		]);
};
var _user$project$Inputs$multiselectAttrs = function (attrs) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$Inputs$idToAttr(attrs.id),
			_user$project$Inputs$classesToAttr(attrs.classList),
			_elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$type$('text'))
		]);
};
var _user$project$Inputs$fileUploadAttrs = function (attrs) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$Inputs$idToAttr(attrs.id),
			_user$project$Inputs$classesToAttr(attrs.classList),
			_elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$type$('text'))
		]);
};
var _user$project$Inputs$radioAttrs = function (attrs) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$Inputs$idToAttr(attrs.id),
			_user$project$Inputs$classesToAttr(attrs.classList),
			_elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$type$('text'))
		]);
};
var _user$project$Inputs$checkboxAttrs = function (attrs) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$Inputs$idToAttr(attrs.id),
			_user$project$Inputs$classesToAttr(attrs.classList),
			_elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$type$('text'))
		]);
};
var _user$project$Inputs$buttonAttrs = function (attrs) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$Inputs$idToAttr(attrs.id),
			_user$project$Inputs$classesToAttr(attrs.classList),
			_elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$type$('text'))
		]);
};
var _user$project$Inputs$textInputAttrs = function (attrs) {
	return _elm_lang$core$Native_List.fromArray(
		[
			_user$project$Inputs$idToAttr(attrs.id),
			_user$project$Inputs$classesToAttr(attrs.classList),
			_user$project$Inputs$placeholderToAttr(attrs.placeholder),
			_elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$type$('text'))
		]);
};
var _user$project$Inputs$inputAttributes = function (inp) {
	var _p4 = inp;
	switch (_p4.ctor) {
		case 'TextInput':
			return A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				_user$project$Inputs$textInputAttrs(_p4._0));
		case 'TextArea':
			return A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				_user$project$Inputs$textAreaAttrs(_p4._0));
		case 'Select':
			return A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				_user$project$Inputs$selectAttrs(_p4._0));
		case 'Multiselect':
			return A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				_user$project$Inputs$multiselectAttrs(_p4._0));
		case 'FileUpload':
			return A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				_user$project$Inputs$fileUploadAttrs(_p4._0));
		case 'Radio':
			return A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				_user$project$Inputs$radioAttrs(_p4._0));
		case 'Checkbox':
			return A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				_user$project$Inputs$checkboxAttrs(_p4._0));
		default:
			return A2(
				_elm_lang$core$List$filterMap,
				_elm_lang$core$Basics$identity,
				_user$project$Inputs$buttonAttrs(_p4._0));
	}
};
var _user$project$Inputs$label = function (inp) {
	var _p5 = function () {
		var _p6 = inp;
		switch (_p6.ctor) {
			case 'TextInput':
				var _p7 = _p6._0;
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p7.label),
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						'input',
						_elm_lang$core$Basics$toString(_p7.id))
				};
			case 'TextArea':
				var _p8 = _p6._0;
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p8.label),
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						'input',
						_elm_lang$core$Basics$toString(_p8.id))
				};
			case 'Select':
				var _p9 = _p6._0;
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p9.label),
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						'input',
						_elm_lang$core$Basics$toString(_p9.id))
				};
			case 'Multiselect':
				var _p10 = _p6._0;
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p10.label),
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						'input',
						_elm_lang$core$Basics$toString(_p10.id))
				};
			case 'FileUpload':
				var _p11 = _p6._0;
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p11.label),
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						'input',
						_elm_lang$core$Basics$toString(_p11.id))
				};
			case 'Radio':
				var _p12 = _p6._0;
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p12.label),
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						'input',
						_elm_lang$core$Basics$toString(_p12.id))
				};
			case 'Checkbox':
				var _p13 = _p6._0;
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p13.label),
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						'input',
						_elm_lang$core$Basics$toString(_p13.id))
				};
			default:
				var _p14 = _p6._0;
				return {
					ctor: '_Tuple2',
					_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p14.label),
					_1: A2(
						_elm_lang$core$Basics_ops['++'],
						'input',
						_elm_lang$core$Basics$toString(_p14.id))
				};
		}
	}();
	var labelText = _p5._0;
	var forValue = _p5._1;
	return A2(
		_elm_lang$html$Html$label,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$for(forValue)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(labelText)
			]));
};
var _user$project$Inputs$moveDownLink = function (id) {
	return A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Move Down')
			]));
};
var _user$project$Inputs$moveUpLink = function (id) {
	return A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Move up')
			]));
};
var _user$project$Inputs$removeLink = function (id) {
	return A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);'),
				_elm_lang$html$Html_Events$onClick(
				_user$project$Messages$FormMessage(
					_user$project$Messages$RemoveInput(
						_user$project$Models$extractId(id))))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Remove')
			]));
};
var _user$project$Inputs$editLink = function (id) {
	return A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);'),
				_elm_lang$html$Html_Events$onClick(
				_user$project$Messages$FormMessage(
					_user$project$Messages$EditInput(
						_user$project$Models$extractId(id))))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Edit')
			]));
};
var _user$project$Inputs$editAndRemoveLink = function (inp) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('edit-and-remove-link')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Inputs$editLink(inp),
				_elm_lang$html$Html$text(' | '),
				_user$project$Inputs$removeLink(inp),
				_elm_lang$html$Html$text(' | '),
				_user$project$Inputs$moveUpLink(inp),
				_elm_lang$html$Html$text(' | '),
				_user$project$Inputs$moveDownLink(inp)
			]));
};
var _user$project$Inputs$textAreaHtml = function (inp) {
	var area = A2(
		_elm_lang$html$Html$textarea,
		_user$project$Inputs$inputAttributes(inp),
		_elm_lang$core$Native_List.fromArray(
			[]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('form-group')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Inputs$label(inp),
				area,
				_user$project$Inputs$editAndRemoveLink(inp)
			]));
};
var _user$project$Inputs$multiselectHtml = function (inp) {
	var s3 = A2(
		_elm_lang$html$Html$option,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('3')
			]));
	var s2 = A2(
		_elm_lang$html$Html$option,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('2')
			]));
	var s1 = A2(
		_elm_lang$html$Html$option,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('1')
			]));
	var select = A2(
		_elm_lang$html$Html$select,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('form-control'),
				_elm_lang$html$Html_Attributes$multiple(true)
			]),
		_elm_lang$core$Native_List.fromArray(
			[s1, s2, s3]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('form-group')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Inputs$label(inp),
				select,
				_user$project$Inputs$editAndRemoveLink(inp)
			]));
};
var _user$project$Inputs$fileUploadHtml = function (inp) {
	var input = A2(
		_elm_lang$html$Html$input,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$type$('file')
			]),
		_elm_lang$core$Native_List.fromArray(
			[]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('form-group')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$Inputs$label(inp),
				input,
				_user$project$Inputs$editAndRemoveLink(inp)
			]));
};
var _user$project$Inputs$radioHtml = function (inp) {
	var r2 = A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$label,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$type$('radio'),
								_elm_lang$html$Html_Attributes$name('radioOption'),
								_elm_lang$html$Html_Attributes$id('radioOption2'),
								_elm_lang$html$Html_Attributes$value('option2')
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						_elm_lang$html$Html$text('Option 2')
					]))
			]));
	var r1 = A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$label,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$type$('radio'),
								_elm_lang$html$Html_Attributes$name('radioOption'),
								_elm_lang$html$Html_Attributes$id('radioOption1'),
								_elm_lang$html$Html_Attributes$value('option1')
							]),
						_elm_lang$core$Native_List.fromArray(
							[])),
						_elm_lang$html$Html$text('Option 1')
					]))
			]));
	var leg = A2(
		_elm_lang$html$Html$legend,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Radios')
			]));
	return A2(
		_elm_lang$html$Html$fieldset,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('form-group')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				leg,
				r1,
				r2,
				_user$project$Inputs$editAndRemoveLink(inp)
			]));
};
var _user$project$Inputs$checkboxHtml = function (inp) {
	var input = A2(
		_elm_lang$html$Html$input,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$type$('checkbox')
			]),
		_elm_lang$core$Native_List.fromArray(
			[]));
	var label = A2(
		_elm_lang$html$Html$label,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				input,
				_elm_lang$html$Html$text('Check me out')
			]));
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('form-check')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				label,
				_user$project$Inputs$editAndRemoveLink(inp)
			]));
};
var _user$project$Inputs$buttonHtml = function (inp) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('my-container')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('submit')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Submit')
					])),
				_user$project$Inputs$editAndRemoveLink(inp)
			]));
};
var _user$project$Inputs$inputHtml = function (input) {
	var _p15 = input;
	switch (_p15.ctor) {
		case 'TextInput':
			return A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[]));
		case 'TextArea':
			return _user$project$Inputs$textAreaHtml(input);
		case 'Select':
			return A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[]));
		case 'Multiselect':
			return _user$project$Inputs$multiselectHtml(input);
		case 'FileUpload':
			return _user$project$Inputs$fileUploadHtml(input);
		case 'Radio':
			return _user$project$Inputs$radioHtml(input);
		case 'Checkbox':
			return _user$project$Inputs$checkboxHtml(input);
		default:
			return _user$project$Inputs$buttonHtml(input);
	}
};
