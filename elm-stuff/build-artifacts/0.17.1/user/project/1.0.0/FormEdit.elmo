var _user$project$FormEdit$buttonHtml = function (inp) {
	return _elm_lang$html$Html$text('ho');
};
var _user$project$FormEdit$checkboxHtml = function (inp) {
	return _elm_lang$html$Html$text('ho');
};
var _user$project$FormEdit$radioHtml = function (inp) {
	return _elm_lang$html$Html$text('ho');
};
var _user$project$FormEdit$fileUploadHtml = function (inp) {
	return _elm_lang$html$Html$text('ho');
};
var _user$project$FormEdit$multiselectHtml = function (inp) {
	return _elm_lang$html$Html$text('ho');
};
var _user$project$FormEdit$selectHtml = function (inp) {
	return _elm_lang$html$Html$text('ho');
};
var _user$project$FormEdit$textAreaAttributes = F4(
	function (inputId, classList, plac, rowNo) {
		var rowNox = _elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$rows(rowNo));
		var placeholderx = function () {
			var _p0 = plac;
			if (_p0.ctor === 'Just') {
				return _elm_lang$core$Maybe$Just(
					_elm_lang$html$Html_Attributes$placeholder(_p0._0));
			} else {
				return _elm_lang$core$Maybe$Nothing;
			}
		}();
		var classes = _elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$String$join, ' ', classList)));
		var idx = _elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$id(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'input',
					_elm_lang$core$Basics$toString(inputId))));
		return A2(
			_elm_lang$core$List$filterMap,
			_elm_lang$core$Basics$identity,
			_elm_lang$core$Native_List.fromArray(
				[idx, classes, placeholderx, rowNox]));
	});
var _user$project$FormEdit$textInputAttributes = F3(
	function (inputId, classList, plac) {
		var placeholderx = function () {
			var _p1 = plac;
			if (_p1.ctor === 'Just') {
				return _elm_lang$core$Maybe$Just(
					_elm_lang$html$Html_Attributes$placeholder(_p1._0));
			} else {
				return _elm_lang$core$Maybe$Nothing;
			}
		}();
		var classes = _elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$class(
				A2(_elm_lang$core$String$join, ' ', classList)));
		var typex = _elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$type$('text'));
		var idx = _elm_lang$core$Maybe$Just(
			_elm_lang$html$Html_Attributes$id(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'input',
					_elm_lang$core$Basics$toString(inputId))));
		return A2(
			_elm_lang$core$List$filterMap,
			_elm_lang$core$Basics$identity,
			_elm_lang$core$Native_List.fromArray(
				[idx, typex, classes, placeholderx]));
	});
var _user$project$FormEdit$inputAttributes = function (inp) {
	var _p2 = inp;
	_v2_2:
	do {
		switch (_p2.ctor) {
			case 'TextInput':
				if (_p2._0.ctor === '_Tuple4') {
					return A3(_user$project$FormEdit$textInputAttributes, _p2._0._0, _p2._0._1, _p2._0._2);
				} else {
					break _v2_2;
				}
			case 'TextArea':
				if (_p2._0.ctor === '_Tuple5') {
					return A4(_user$project$FormEdit$textAreaAttributes, _p2._0._0, _p2._0._1, _p2._0._2, _p2._0._3);
				} else {
					break _v2_2;
				}
			default:
				break _v2_2;
		}
	} while(false);
	return _elm_lang$core$Native_List.fromArray(
		[]);
};
var _user$project$FormEdit$label = function (inp) {
	var _p3 = function () {
		var _p4 = inp;
		_v3_2:
		do {
			switch (_p4.ctor) {
				case 'TextInput':
					if (_p4._0.ctor === '_Tuple4') {
						return {
							ctor: '_Tuple2',
							_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p4._0._3),
							_1: A2(
								_elm_lang$core$Basics_ops['++'],
								'input',
								_elm_lang$core$Basics$toString(_p4._0._0))
						};
					} else {
						break _v3_2;
					}
				case 'TextArea':
					if (_p4._0.ctor === '_Tuple5') {
						return {
							ctor: '_Tuple2',
							_0: A2(_elm_lang$core$Maybe$withDefault, 'default', _p4._0._4),
							_1: A2(
								_elm_lang$core$Basics_ops['++'],
								'input',
								_elm_lang$core$Basics$toString(_p4._0._0))
						};
					} else {
						break _v3_2;
					}
				default:
					break _v3_2;
			}
		} while(false);
		return {ctor: '_Tuple2', _0: 'ahoj', _1: 'input2'};
	}();
	var txt = _p3._0;
	var forx = _p3._1;
	return A2(
		_elm_lang$html$Html$label,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$for(forx)
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(txt)
			]));
};
var _user$project$FormEdit$removeLink = function (id) {
	return A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);'),
				_elm_lang$html$Html_Events$onClick(
				_user$project$Messages$FormMessage(
					_user$project$Messages$RemoveInput(id)))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Remove')
			]));
};
var _user$project$FormEdit$editLink = function (id) {
	return A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);'),
				_elm_lang$html$Html_Events$onClick(
				_user$project$Messages$FormMessage(
					_user$project$Messages$EditInput(id)))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Edit')
			]));
};
var _user$project$FormEdit$editAndRemoveLink = function (id) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('edit-and-remove-link')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$FormEdit$editLink(id),
				_user$project$FormEdit$removeLink(id)
			]));
};
var _user$project$FormEdit$formGroup = F2(
	function (els, id) {
		var links = _elm_lang$core$Native_List.fromArray(
			[
				_user$project$FormEdit$editAndRemoveLink(id)
			]);
		var elementsAndLinks = A2(_elm_lang$core$List$append, els, links);
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html_Attributes$class('form-group')
				]),
			elementsAndLinks);
	});
var _user$project$FormEdit$textAreaHtml = function (inp) {
	var id = _user$project$Models$extractId(inp);
	var area = A2(
		_elm_lang$html$Html$textarea,
		_user$project$FormEdit$inputAttributes(inp),
		_elm_lang$core$Native_List.fromArray(
			[]));
	return A2(
		_user$project$FormEdit$formGroup,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$FormEdit$label(inp),
				area
			]),
		id);
};
var _user$project$FormEdit$textInputHtml = function (inp) {
	var id = _user$project$Models$extractId(inp);
	var links = _elm_lang$core$Native_List.fromArray(
		[]);
	var input = A2(
		_elm_lang$html$Html$input,
		_user$project$FormEdit$inputAttributes(inp),
		_elm_lang$core$Native_List.fromArray(
			[]));
	return A2(
		_user$project$FormEdit$formGroup,
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$FormEdit$label(inp),
				input
			]),
		id);
};
var _user$project$FormEdit$inputHtml = function (input) {
	var _p5 = input;
	switch (_p5.ctor) {
		case 'TextInput':
			return _user$project$FormEdit$textInputHtml(input);
		case 'TextArea':
			return _user$project$FormEdit$textAreaHtml(input);
		case 'Select':
			return _user$project$FormEdit$selectHtml(input);
		case 'Multiselect':
			return _user$project$FormEdit$multiselectHtml(input);
		case 'FileUpload':
			return _user$project$FormEdit$fileUploadHtml(input);
		case 'Radio':
			return _user$project$FormEdit$radioHtml(input);
		case 'Checkbox':
			return _user$project$FormEdit$checkboxHtml(input);
		default:
			return _user$project$FormEdit$buttonHtml(input);
	}
};
var _user$project$FormEdit$view = function (model) {
	var elements = A2(_elm_lang$core$List$map, _user$project$FormEdit$inputHtml, model.form);
	return A2(
		_elm_lang$html$Html$form,
		_elm_lang$core$Native_List.fromArray(
			[]),
		elements);
};
