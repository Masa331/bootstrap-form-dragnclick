var _user$project$Models$maxInputId = function (model) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		0,
		_elm_lang$core$List$maximum(
			A2(_elm_lang$core$List$map, _user$project$FormModel$extractId, model.form)));
};
var _user$project$Models$currentlyEdditedInput = function (model) {
	var _p0 = model.currentlyEdditedInputId;
	if (_p0.ctor === 'Nothing') {
		return _elm_lang$core$Maybe$Nothing;
	} else {
		return _elm_lang$core$List$head(
			A2(
				_elm_lang$core$List$filter,
				function (el) {
					return _elm_lang$core$Native_Utils.eq(
						_user$project$FormModel$extractId(el),
						_p0._0);
				},
				model.form));
	}
};
var _user$project$Models$Model = F3(
	function (a, b, c) {
		return {form: a, currentlyEdditedInputId: b, newOption: c};
	});
var _user$project$Models$initial = function () {
	var button = _user$project$FormModel$button(5);
	var select1 = _user$project$FormModel$select(4);
	var checkbox = _user$project$FormModel$checkbox(3);
	var textArea = _user$project$FormModel$textArea(2);
	var textInput = _user$project$FormModel$textInput(1);
	return A3(
		_user$project$Models$Model,
		_elm_lang$core$Native_List.fromArray(
			[textInput, textArea, select1, checkbox, button]),
		_elm_lang$core$Maybe$Nothing,
		'');
}();
