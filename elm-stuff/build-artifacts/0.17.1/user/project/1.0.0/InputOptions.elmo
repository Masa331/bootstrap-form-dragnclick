var _user$project$InputOptions$optionsEdit = function (input) {
	var lifunc = function (value) {
		return A2(
			_elm_lang$html$Html$li,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text(value),
					A2(
					_elm_lang$html$Html$a,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$href('javascript:void(0);'),
							_elm_lang$html$Html_Attributes$class('pull-xs-right'),
							_elm_lang$html$Html_Events$onClick(
							_user$project$Messages$InputMessage(
								_user$project$Messages$RemoveOption(value)))
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text('remove')
						]))
				]));
	};
	var lis = A2(_elm_lang$core$List$map, lifunc, input.options);
	return _elm_lang$core$Native_List.fromArray(
		[
			A2(
			_elm_lang$html$Html$b,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text('Options')
				])),
			A2(
			_elm_lang$html$Html$hr,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[])),
			A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html_Attributes$class('input-group')
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$input,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$class('form-control'),
							_elm_lang$html$Html_Events$onInput(
							function (_p0) {
								return _user$project$Messages$InputMessage(
									_user$project$Messages$NewOptionEdit(_p0));
							})
						]),
					_elm_lang$core$Native_List.fromArray(
						[])),
					A2(
					_elm_lang$html$Html$span,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$class('input-group-btn')
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$html$Html$button,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Attributes$class('btn btn-secondary'),
									_elm_lang$html$Html_Attributes$type$('button'),
									_elm_lang$html$Html_Events$onClick(
									_user$project$Messages$InputMessage(_user$project$Messages$SaveNewOption))
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text('Add')
								]))
						]))
				])),
			A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$ul,
					_elm_lang$core$Native_List.fromArray(
						[]),
					lis)
				]))
		]);
};
var _user$project$InputOptions$boolEdit = F3(
	function (label, msg, value) {
		return _elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$b,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(label)
					])),
				A2(
				_elm_lang$html$Html$hr,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('form-group')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$label,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('form-check-label')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$input,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$type$('checkbox'),
										_elm_lang$html$Html_Attributes$class('form-check-input'),
										_elm_lang$html$Html_Events$onCheck(msg),
										_elm_lang$html$Html_Attributes$checked(value)
									]),
								_elm_lang$core$Native_List.fromArray(
									[]))
							]))
					]))
			]);
	});
var _user$project$InputOptions$selectEdit = F4(
	function (label, msg, options, selected) {
		var os = A2(
			_elm_lang$core$List$map,
			function (option) {
				return A2(
					_elm_lang$html$Html$option,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$selected(
							_elm_lang$core$Native_Utils.eq(option, selected))
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html$text(option)
						]));
			},
			options);
		return _elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$b,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(label)
					])),
				A2(
				_elm_lang$html$Html$hr,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('form-group')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$select,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('form-control'),
								_elm_lang$html$Html_Events$onInput(msg)
							]),
						os)
					]))
			]);
	});
var _user$project$InputOptions$textEdit = F3(
	function (label, msg, value) {
		return _elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$b,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(label)
					])),
				A2(
				_elm_lang$html$Html$hr,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('form-group')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('form-control'),
								_elm_lang$html$Html_Events$onInput(msg),
								_elm_lang$html$Html_Attributes$value(value)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					]))
			]);
	});
var _user$project$InputOptions$readonlyEdit = function (input) {
	return A3(
		_user$project$InputOptions$boolEdit,
		'Readonly',
		function (_p1) {
			return _user$project$Messages$InputMessage(
				_user$project$Messages$ReadonlyEdit(_p1));
		},
		input.readonly);
};
var _user$project$InputOptions$disabledEdit = function (input) {
	return A3(
		_user$project$InputOptions$boolEdit,
		'Disabled',
		function (_p2) {
			return _user$project$Messages$InputMessage(
				_user$project$Messages$DisabledEdit(_p2));
		},
		input.disabled);
};
var _user$project$InputOptions$sizeEdit = function (input) {
	return A4(
		_user$project$InputOptions$selectEdit,
		'Size edit',
		function (_p3) {
			return _user$project$Messages$InputMessage(
				_user$project$Messages$SizeEdit(_p3));
		},
		_elm_lang$core$Native_List.fromArray(
			['small', 'normal', 'large']),
		_user$project$FormModel$sizeToString(input.size));
};
var _user$project$InputOptions$typeEdit = function (input) {
	return A4(
		_user$project$InputOptions$selectEdit,
		'Text input type',
		function (_p4) {
			return _user$project$Messages$InputMessage(
				_user$project$Messages$TypeEdit(_p4));
		},
		_elm_lang$core$Native_List.fromArray(
			['text', 'search', 'email', 'url', 'tel', 'password', 'number', 'datetime-local', 'date', 'month', 'week', 'time', 'color']),
		_user$project$FormModel$inputTypeToString(input.type$));
};
var _user$project$InputOptions$addon2Edit = function (input) {
	return A3(
		_user$project$InputOptions$textEdit,
		'Second addon',
		function (_p5) {
			return _user$project$Messages$InputMessage(
				_user$project$Messages$SecondAddonEdit(_p5));
		},
		A2(_elm_lang$core$Maybe$withDefault, '', input.addon2));
};
var _user$project$InputOptions$addon1Edit = function (input) {
	return A3(
		_user$project$InputOptions$textEdit,
		'First addon',
		function (_p6) {
			return _user$project$Messages$InputMessage(
				_user$project$Messages$FirstAddonEdit(_p6));
		},
		A2(_elm_lang$core$Maybe$withDefault, '', input.addon1));
};
var _user$project$InputOptions$smallUnderEdit = function (input) {
	return A3(
		_user$project$InputOptions$textEdit,
		'Small text under input',
		function (_p7) {
			return _user$project$Messages$InputMessage(
				_user$project$Messages$SmallEdit(_p7));
		},
		A2(_elm_lang$core$Maybe$withDefault, '', input.small));
};
var _user$project$InputOptions$labelEdit = function (input) {
	return A3(
		_user$project$InputOptions$textEdit,
		'Label',
		function (_p8) {
			return _user$project$Messages$InputMessage(
				_user$project$Messages$LabelEdit(_p8));
		},
		A2(_elm_lang$core$Maybe$withDefault, '', input.label));
};
var _user$project$InputOptions$placeholderEdit = function (input) {
	return A3(
		_user$project$InputOptions$textEdit,
		'Placeholder',
		function (_p9) {
			return _user$project$Messages$InputMessage(
				_user$project$Messages$PlaceholderEdit(_p9));
		},
		A2(_elm_lang$core$Maybe$withDefault, '', input.placeholder));
};
var _user$project$InputOptions$view = function (inp) {
	var options = function () {
		var _p10 = inp.type$;
		switch (_p10.ctor) {
			case 'Text':
				return _elm_lang$core$Native_List.fromArray(
					[_user$project$InputOptions$placeholderEdit, _user$project$InputOptions$labelEdit, _user$project$InputOptions$smallUnderEdit, _user$project$InputOptions$typeEdit, _user$project$InputOptions$addon1Edit, _user$project$InputOptions$addon2Edit, _user$project$InputOptions$sizeEdit, _user$project$InputOptions$disabledEdit, _user$project$InputOptions$readonlyEdit]);
			case 'Select':
				return _elm_lang$core$Native_List.fromArray(
					[_user$project$InputOptions$labelEdit, _user$project$InputOptions$optionsEdit, _user$project$InputOptions$smallUnderEdit, _user$project$InputOptions$sizeEdit, _user$project$InputOptions$disabledEdit]);
			case 'TextArea':
				return _elm_lang$core$Native_List.fromArray(
					[_user$project$InputOptions$placeholderEdit, _user$project$InputOptions$labelEdit, _user$project$InputOptions$smallUnderEdit, _user$project$InputOptions$addon1Edit]);
			case 'Multiselect':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'FileUpload':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Radio':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Checkbox':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Button':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Search':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Email':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Url':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Tel':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Password':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Number':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'DatetimeLocal':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Date':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Month':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Week':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			case 'Time':
				return _elm_lang$core$Native_List.fromArray(
					[]);
			default:
				return _elm_lang$core$Native_List.fromArray(
					[]);
		}
	}();
	return _elm_lang$core$List$concat(
		A2(
			_elm_lang$core$List$map,
			function (f) {
				return f(inp);
			},
			options));
};
