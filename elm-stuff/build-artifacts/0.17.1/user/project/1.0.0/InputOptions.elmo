var _user$project$InputOptions$createAttribute = function (attribute) {
	return A2(_elm_lang$html$Html_Attributes$attribute, attribute.name, attribute.value);
};
var _user$project$InputOptions$createAttributes = function (model) {
	return A2(_elm_lang$core$List$map, _user$project$InputOptions$createAttribute, model.attributes);
};
var _user$project$InputOptions$removeLink = function (element) {
	return A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);'),
				_elm_lang$html$Html_Events$onClick(
				_user$project$Messages$InputMessage(
					_user$project$Messages$RemoveInput(element.id)))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Remove')
			]));
};
var _user$project$InputOptions$editLink = function (element) {
	return A2(
		_elm_lang$html$Html$a,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$href('javascript:void(0);'),
				_elm_lang$html$Html_Events$onClick(
				_user$project$Messages$InputMessage(
					_user$project$Messages$EditInput(element.id)))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text('Edit')
			]));
};
var _user$project$InputOptions$editAndRemoveLink = function (element) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('edit-and-remove-link')
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_user$project$InputOptions$editLink(element),
				_user$project$InputOptions$removeLink(element)
			]));
};
var _user$project$InputOptions$element = function (model) {
	var value = _elm_lang$html$Html$text(model.value);
	var childs = function (_p0) {
		var _p1 = _p0;
		return _p1._0;
	}(model.children);
	var attributes = _user$project$InputOptions$createAttributes(model);
	var _p2 = childs;
	if (_p2.ctor === '[]') {
		return _user$project$Models$isDeletable(model) ? _elm_lang$core$Native_List.fromArray(
			[
				A3(
				_elm_lang$html$Html$node,
				model.tag,
				attributes,
				_elm_lang$core$Native_List.fromArray(
					[value])),
				_user$project$InputOptions$editAndRemoveLink(model)
			]) : _elm_lang$core$Native_List.fromArray(
			[
				A3(
				_elm_lang$html$Html$node,
				model.tag,
				attributes,
				_elm_lang$core$Native_List.fromArray(
					[value]))
			]);
	} else {
		return _user$project$Models$isDeletable(model) ? _elm_lang$core$Native_List.fromArray(
			[
				A3(
				_elm_lang$html$Html$node,
				model.tag,
				attributes,
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$List$concat(
						A2(_elm_lang$core$List$map, _user$project$InputOptions$element, childs)),
					_elm_lang$core$Native_List.fromArray(
						[value]))),
				_user$project$InputOptions$editAndRemoveLink(model)
			]) : _elm_lang$core$Native_List.fromArray(
			[
				A3(
				_elm_lang$html$Html$node,
				model.tag,
				attributes,
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$List$concat(
						A2(_elm_lang$core$List$map, _user$project$InputOptions$element, childs)),
					_elm_lang$core$Native_List.fromArray(
						[value])))
			]);
	}
};
var _user$project$InputOptions$form = function (model) {
	return _user$project$InputOptions$element(model);
};
var _user$project$InputOptions$view = function (model) {
	return _elm_lang$core$Native_List.fromArray(
		[]);
};
